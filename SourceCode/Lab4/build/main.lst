ARM GAS  C:\Users\james\AppData\Local\Temp\ccFwO6vV.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  23              	MX_GPIO_Init:
  24              	.LFB69:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  C:\Users\james\AppData\Local\Temp\ccFwO6vV.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** UART_HandleTypeDef huart1;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE END PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  52:Core/Src/main.c **** void SystemClock_Config(void);
  53:Core/Src/main.c **** static void MX_GPIO_Init(void);
  54:Core/Src/main.c **** static void MX_TIM2_Init(void);
  55:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  56:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END PFP */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  61:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE END 0 */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /**
  66:Core/Src/main.c ****   * @brief  The application entry point.
  67:Core/Src/main.c ****   * @retval int
  68:Core/Src/main.c ****   */
  69:Core/Src/main.c **** int main(void)
  70:Core/Src/main.c **** {
  71:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****   /* USER CODE END 1 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  78:Core/Src/main.c ****   HAL_Init();
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE END Init */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* Configure the system clock */
  85:Core/Src/main.c ****   SystemClock_Config();
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE END SysInit */
  90:Core/Src/main.c **** 
ARM GAS  C:\Users\james\AppData\Local\Temp\ccFwO6vV.s 			page 3


  91:Core/Src/main.c ****   /* Initialize all configured peripherals */
  92:Core/Src/main.c ****   MX_GPIO_Init();
  93:Core/Src/main.c ****   MX_TIM2_Init();
  94:Core/Src/main.c ****   MX_USART1_UART_Init();
  95:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* USER CODE END 2 */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* Infinite loop */
 100:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 101:Core/Src/main.c ****   while (1)
 102:Core/Src/main.c ****   {
 103:Core/Src/main.c ****     /* USER CODE END WHILE */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 106:Core/Src/main.c ****   }
 107:Core/Src/main.c ****   /* USER CODE END 3 */
 108:Core/Src/main.c **** }
 109:Core/Src/main.c **** 
 110:Core/Src/main.c **** /**
 111:Core/Src/main.c ****   * @brief System Clock Configuration
 112:Core/Src/main.c ****   * @retval None
 113:Core/Src/main.c ****   */
 114:Core/Src/main.c **** void SystemClock_Config(void)
 115:Core/Src/main.c **** {
 116:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 117:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 120:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 121:Core/Src/main.c ****   */
 122:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 123:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 124:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 125:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 126:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 127:Core/Src/main.c ****   {
 128:Core/Src/main.c ****     Error_Handler();
 129:Core/Src/main.c ****   }
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 132:Core/Src/main.c ****   */
 133:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 134:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 135:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 136:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 137:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 138:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 141:Core/Src/main.c ****   {
 142:Core/Src/main.c ****     Error_Handler();
 143:Core/Src/main.c ****   }
 144:Core/Src/main.c **** }
 145:Core/Src/main.c **** 
 146:Core/Src/main.c **** /**
 147:Core/Src/main.c ****   * @brief TIM2 Initialization Function
ARM GAS  C:\Users\james\AppData\Local\Temp\ccFwO6vV.s 			page 4


 148:Core/Src/main.c ****   * @param None
 149:Core/Src/main.c ****   * @retval None
 150:Core/Src/main.c ****   */
 151:Core/Src/main.c **** static void MX_TIM2_Init(void)
 152:Core/Src/main.c **** {
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 159:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 164:Core/Src/main.c ****   htim2.Instance = TIM2;
 165:Core/Src/main.c ****   htim2.Init.Prescaler = 79;
 166:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 167:Core/Src/main.c ****   htim2.Init.Period = 9;
 168:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 169:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 170:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 171:Core/Src/main.c ****   {
 172:Core/Src/main.c ****     Error_Handler();
 173:Core/Src/main.c ****   }
 174:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 175:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 176:Core/Src/main.c ****   {
 177:Core/Src/main.c ****     Error_Handler();
 178:Core/Src/main.c ****   }
 179:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 180:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 181:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 182:Core/Src/main.c ****   {
 183:Core/Src/main.c ****     Error_Handler();
 184:Core/Src/main.c ****   }
 185:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 188:Core/Src/main.c **** 
 189:Core/Src/main.c **** }
 190:Core/Src/main.c **** 
 191:Core/Src/main.c **** /**
 192:Core/Src/main.c ****   * @brief USART1 Initialization Function
 193:Core/Src/main.c ****   * @param None
 194:Core/Src/main.c ****   * @retval None
 195:Core/Src/main.c ****   */
 196:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 197:Core/Src/main.c **** {
 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 202:Core/Src/main.c **** 
 203:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 204:Core/Src/main.c **** 
ARM GAS  C:\Users\james\AppData\Local\Temp\ccFwO6vV.s 			page 5


 205:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 206:Core/Src/main.c ****   huart1.Instance = USART1;
 207:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 208:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 209:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 210:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 211:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 212:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 213:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 214:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 215:Core/Src/main.c ****   {
 216:Core/Src/main.c ****     Error_Handler();
 217:Core/Src/main.c ****   }
 218:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 221:Core/Src/main.c **** 
 222:Core/Src/main.c **** }
 223:Core/Src/main.c **** 
 224:Core/Src/main.c **** /**
 225:Core/Src/main.c ****   * @brief GPIO Initialization Function
 226:Core/Src/main.c ****   * @param None
 227:Core/Src/main.c ****   * @retval None
 228:Core/Src/main.c ****   */
 229:Core/Src/main.c **** static void MX_GPIO_Init(void)
 230:Core/Src/main.c **** {
  26              		.loc 1 230 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 24
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 87B0     		sub	sp, sp, #28
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 40
 231:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 231 3 view .LVU1
  40              		.loc 1 231 20 is_stmt 0 view .LVU2
  41 0004 0024     		movs	r4, #0
  42 0006 0294     		str	r4, [sp, #8]
  43 0008 0394     		str	r4, [sp, #12]
  44 000a 0494     		str	r4, [sp, #16]
  45 000c 0594     		str	r4, [sp, #20]
 232:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 233:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 236:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  46              		.loc 1 236 3 is_stmt 1 view .LVU3
  47              	.LBB4:
  48              		.loc 1 236 3 view .LVU4
  49              		.loc 1 236 3 view .LVU5
  50 000e 0E4B     		ldr	r3, .L3
ARM GAS  C:\Users\james\AppData\Local\Temp\ccFwO6vV.s 			page 6


  51 0010 9A69     		ldr	r2, [r3, #24]
  52 0012 42F00402 		orr	r2, r2, #4
  53 0016 9A61     		str	r2, [r3, #24]
  54              		.loc 1 236 3 view .LVU6
  55 0018 9B69     		ldr	r3, [r3, #24]
  56 001a 03F00403 		and	r3, r3, #4
  57 001e 0193     		str	r3, [sp, #4]
  58              		.loc 1 236 3 view .LVU7
  59 0020 019B     		ldr	r3, [sp, #4]
  60              	.LBE4:
  61              		.loc 1 236 3 view .LVU8
 237:Core/Src/main.c **** 
 238:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 239:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6
  62              		.loc 1 239 3 view .LVU9
  63 0022 0A4D     		ldr	r5, .L3+4
  64 0024 2246     		mov	r2, r4
  65 0026 F821     		movs	r1, #248
  66 0028 2846     		mov	r0, r5
  67 002a FFF7FEFF 		bl	HAL_GPIO_WritePin
  68              	.LVL0:
 240:Core/Src/main.c ****                           |GPIO_PIN_7, GPIO_PIN_RESET);
 241:Core/Src/main.c **** 
 242:Core/Src/main.c ****   /*Configure GPIO pins : PA3 PA4 PA5 PA6
 243:Core/Src/main.c ****                            PA7 */
 244:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6
  69              		.loc 1 244 3 view .LVU10
  70              		.loc 1 244 23 is_stmt 0 view .LVU11
  71 002e F823     		movs	r3, #248
  72 0030 0293     		str	r3, [sp, #8]
 245:Core/Src/main.c ****                           |GPIO_PIN_7;
 246:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  73              		.loc 1 246 3 is_stmt 1 view .LVU12
  74              		.loc 1 246 24 is_stmt 0 view .LVU13
  75 0032 0123     		movs	r3, #1
  76 0034 0393     		str	r3, [sp, #12]
 247:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  77              		.loc 1 247 3 is_stmt 1 view .LVU14
  78              		.loc 1 247 24 is_stmt 0 view .LVU15
  79 0036 0494     		str	r4, [sp, #16]
 248:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  80              		.loc 1 248 3 is_stmt 1 view .LVU16
  81              		.loc 1 248 25 is_stmt 0 view .LVU17
  82 0038 0223     		movs	r3, #2
  83 003a 0593     		str	r3, [sp, #20]
 249:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  84              		.loc 1 249 3 is_stmt 1 view .LVU18
  85 003c 02A9     		add	r1, sp, #8
  86 003e 2846     		mov	r0, r5
  87 0040 FFF7FEFF 		bl	HAL_GPIO_Init
  88              	.LVL1:
 250:Core/Src/main.c **** 
 251:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 252:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 253:Core/Src/main.c **** }
  89              		.loc 1 253 1 is_stmt 0 view .LVU19
  90 0044 07B0     		add	sp, sp, #28
ARM GAS  C:\Users\james\AppData\Local\Temp\ccFwO6vV.s 			page 7


  91              	.LCFI2:
  92              		.cfi_def_cfa_offset 12
  93              		@ sp needed
  94 0046 30BD     		pop	{r4, r5, pc}
  95              	.L4:
  96              		.align	2
  97              	.L3:
  98 0048 00100240 		.word	1073876992
  99 004c 00080140 		.word	1073809408
 100              		.cfi_endproc
 101              	.LFE69:
 103              		.section	.text.Error_Handler,"ax",%progbits
 104              		.align	1
 105              		.global	Error_Handler
 106              		.syntax unified
 107              		.thumb
 108              		.thumb_func
 110              	Error_Handler:
 111              	.LFB70:
 254:Core/Src/main.c **** 
 255:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 256:Core/Src/main.c **** 
 257:Core/Src/main.c **** /* USER CODE END 4 */
 258:Core/Src/main.c **** 
 259:Core/Src/main.c **** /**
 260:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 261:Core/Src/main.c ****   * @retval None
 262:Core/Src/main.c ****   */
 263:Core/Src/main.c **** void Error_Handler(void)
 264:Core/Src/main.c **** {
 112              		.loc 1 264 1 is_stmt 1 view -0
 113              		.cfi_startproc
 114              		@ Volatile: function does not return.
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117              		@ link register save eliminated.
 265:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 266:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 267:Core/Src/main.c ****   __disable_irq();
 118              		.loc 1 267 3 view .LVU21
 119              	.LBB5:
 120              	.LBI5:
 121              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
ARM GAS  C:\Users\james\AppData\Local\Temp\ccFwO6vV.s 			page 8


  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  C:\Users\james\AppData\Local\Temp\ccFwO6vV.s 			page 9


  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\james\AppData\Local\Temp\ccFwO6vV.s 			page 10


 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 122              		.loc 2 140 27 view .LVU22
 123              	.LBB6:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 124              		.loc 2 142 3 view .LVU23
 125              		.syntax unified
 126              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 127 0000 72B6     		cpsid i
 128              	@ 0 "" 2
 129              		.thumb
 130              		.syntax unified
 131              	.L6:
 132              	.LBE6:
 133              	.LBE5:
 268:Core/Src/main.c ****   while (1)
 134              		.loc 1 268 3 discriminator 1 view .LVU24
 269:Core/Src/main.c ****   {
 270:Core/Src/main.c ****   }
 135              		.loc 1 270 3 discriminator 1 view .LVU25
 268:Core/Src/main.c ****   while (1)
 136              		.loc 1 268 9 discriminator 1 view .LVU26
 137 0002 FEE7     		b	.L6
 138              		.cfi_endproc
 139              	.LFE70:
 141              		.section	.text.MX_TIM2_Init,"ax",%progbits
 142              		.align	1
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 147              	MX_TIM2_Init:
 148              	.LFB67:
 152:Core/Src/main.c **** 
 149              		.loc 1 152 1 view -0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 24
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153 0000 00B5     		push	{lr}
 154              	.LCFI3:
 155              		.cfi_def_cfa_offset 4
 156              		.cfi_offset 14, -4
 157 0002 87B0     		sub	sp, sp, #28
 158              	.LCFI4:
 159              		.cfi_def_cfa_offset 32
 158:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 160              		.loc 1 158 3 view .LVU28
ARM GAS  C:\Users\james\AppData\Local\Temp\ccFwO6vV.s 			page 11


 158:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 161              		.loc 1 158 26 is_stmt 0 view .LVU29
 162 0004 0023     		movs	r3, #0
 163 0006 0293     		str	r3, [sp, #8]
 164 0008 0393     		str	r3, [sp, #12]
 165 000a 0493     		str	r3, [sp, #16]
 166 000c 0593     		str	r3, [sp, #20]
 159:Core/Src/main.c **** 
 167              		.loc 1 159 3 is_stmt 1 view .LVU30
 159:Core/Src/main.c **** 
 168              		.loc 1 159 27 is_stmt 0 view .LVU31
 169 000e 0093     		str	r3, [sp]
 170 0010 0193     		str	r3, [sp, #4]
 164:Core/Src/main.c ****   htim2.Init.Prescaler = 79;
 171              		.loc 1 164 3 is_stmt 1 view .LVU32
 164:Core/Src/main.c ****   htim2.Init.Prescaler = 79;
 172              		.loc 1 164 18 is_stmt 0 view .LVU33
 173 0012 1348     		ldr	r0, .L15
 174 0014 4FF08042 		mov	r2, #1073741824
 175 0018 0260     		str	r2, [r0]
 165:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 176              		.loc 1 165 3 is_stmt 1 view .LVU34
 165:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 177              		.loc 1 165 24 is_stmt 0 view .LVU35
 178 001a 4F22     		movs	r2, #79
 179 001c 4260     		str	r2, [r0, #4]
 166:Core/Src/main.c ****   htim2.Init.Period = 9;
 180              		.loc 1 166 3 is_stmt 1 view .LVU36
 166:Core/Src/main.c ****   htim2.Init.Period = 9;
 181              		.loc 1 166 26 is_stmt 0 view .LVU37
 182 001e 8360     		str	r3, [r0, #8]
 167:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 183              		.loc 1 167 3 is_stmt 1 view .LVU38
 167:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 184              		.loc 1 167 21 is_stmt 0 view .LVU39
 185 0020 0922     		movs	r2, #9
 186 0022 C260     		str	r2, [r0, #12]
 168:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 187              		.loc 1 168 3 is_stmt 1 view .LVU40
 168:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 188              		.loc 1 168 28 is_stmt 0 view .LVU41
 189 0024 0361     		str	r3, [r0, #16]
 169:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 190              		.loc 1 169 3 is_stmt 1 view .LVU42
 169:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 191              		.loc 1 169 32 is_stmt 0 view .LVU43
 192 0026 8361     		str	r3, [r0, #24]
 170:Core/Src/main.c ****   {
 193              		.loc 1 170 3 is_stmt 1 view .LVU44
 170:Core/Src/main.c ****   {
 194              		.loc 1 170 7 is_stmt 0 view .LVU45
 195 0028 FFF7FEFF 		bl	HAL_TIM_Base_Init
 196              	.LVL2:
 170:Core/Src/main.c ****   {
 197              		.loc 1 170 6 view .LVU46
 198 002c 90B9     		cbnz	r0, .L12
 174:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
ARM GAS  C:\Users\james\AppData\Local\Temp\ccFwO6vV.s 			page 12


 199              		.loc 1 174 3 is_stmt 1 view .LVU47
 174:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 200              		.loc 1 174 34 is_stmt 0 view .LVU48
 201 002e 4FF48053 		mov	r3, #4096
 202 0032 0293     		str	r3, [sp, #8]
 175:Core/Src/main.c ****   {
 203              		.loc 1 175 3 is_stmt 1 view .LVU49
 175:Core/Src/main.c ****   {
 204              		.loc 1 175 7 is_stmt 0 view .LVU50
 205 0034 02A9     		add	r1, sp, #8
 206 0036 0A48     		ldr	r0, .L15
 207 0038 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 208              	.LVL3:
 175:Core/Src/main.c ****   {
 209              		.loc 1 175 6 view .LVU51
 210 003c 60B9     		cbnz	r0, .L13
 179:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 211              		.loc 1 179 3 is_stmt 1 view .LVU52
 179:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 212              		.loc 1 179 37 is_stmt 0 view .LVU53
 213 003e 0023     		movs	r3, #0
 214 0040 0093     		str	r3, [sp]
 180:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 215              		.loc 1 180 3 is_stmt 1 view .LVU54
 180:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 216              		.loc 1 180 33 is_stmt 0 view .LVU55
 217 0042 0193     		str	r3, [sp, #4]
 181:Core/Src/main.c ****   {
 218              		.loc 1 181 3 is_stmt 1 view .LVU56
 181:Core/Src/main.c ****   {
 219              		.loc 1 181 7 is_stmt 0 view .LVU57
 220 0044 6946     		mov	r1, sp
 221 0046 0648     		ldr	r0, .L15
 222 0048 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 223              	.LVL4:
 181:Core/Src/main.c ****   {
 224              		.loc 1 181 6 view .LVU58
 225 004c 30B9     		cbnz	r0, .L14
 189:Core/Src/main.c **** 
 226              		.loc 1 189 1 view .LVU59
 227 004e 07B0     		add	sp, sp, #28
 228              	.LCFI5:
 229              		.cfi_remember_state
 230              		.cfi_def_cfa_offset 4
 231              		@ sp needed
 232 0050 5DF804FB 		ldr	pc, [sp], #4
 233              	.L12:
 234              	.LCFI6:
 235              		.cfi_restore_state
 172:Core/Src/main.c ****   }
 236              		.loc 1 172 5 is_stmt 1 view .LVU60
 237 0054 FFF7FEFF 		bl	Error_Handler
 238              	.LVL5:
 239              	.L13:
 177:Core/Src/main.c ****   }
 240              		.loc 1 177 5 view .LVU61
 241 0058 FFF7FEFF 		bl	Error_Handler
ARM GAS  C:\Users\james\AppData\Local\Temp\ccFwO6vV.s 			page 13


 242              	.LVL6:
 243              	.L14:
 183:Core/Src/main.c ****   }
 244              		.loc 1 183 5 view .LVU62
 245 005c FFF7FEFF 		bl	Error_Handler
 246              	.LVL7:
 247              	.L16:
 248              		.align	2
 249              	.L15:
 250 0060 00000000 		.word	.LANCHOR0
 251              		.cfi_endproc
 252              	.LFE67:
 254              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 255              		.align	1
 256              		.syntax unified
 257              		.thumb
 258              		.thumb_func
 260              	MX_USART1_UART_Init:
 261              	.LFB68:
 197:Core/Src/main.c **** 
 262              		.loc 1 197 1 view -0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266 0000 08B5     		push	{r3, lr}
 267              	.LCFI7:
 268              		.cfi_def_cfa_offset 8
 269              		.cfi_offset 3, -8
 270              		.cfi_offset 14, -4
 206:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 271              		.loc 1 206 3 view .LVU64
 206:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 272              		.loc 1 206 19 is_stmt 0 view .LVU65
 273 0002 0A48     		ldr	r0, .L21
 274 0004 0A4B     		ldr	r3, .L21+4
 275 0006 0360     		str	r3, [r0]
 207:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 276              		.loc 1 207 3 is_stmt 1 view .LVU66
 207:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 277              		.loc 1 207 24 is_stmt 0 view .LVU67
 278 0008 4FF4E133 		mov	r3, #115200
 279 000c 4360     		str	r3, [r0, #4]
 208:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 280              		.loc 1 208 3 is_stmt 1 view .LVU68
 208:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 281              		.loc 1 208 26 is_stmt 0 view .LVU69
 282 000e 0023     		movs	r3, #0
 283 0010 8360     		str	r3, [r0, #8]
 209:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 284              		.loc 1 209 3 is_stmt 1 view .LVU70
 209:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 285              		.loc 1 209 24 is_stmt 0 view .LVU71
 286 0012 C360     		str	r3, [r0, #12]
 210:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 287              		.loc 1 210 3 is_stmt 1 view .LVU72
 210:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 288              		.loc 1 210 22 is_stmt 0 view .LVU73
ARM GAS  C:\Users\james\AppData\Local\Temp\ccFwO6vV.s 			page 14


 289 0014 0361     		str	r3, [r0, #16]
 211:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 290              		.loc 1 211 3 is_stmt 1 view .LVU74
 211:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 291              		.loc 1 211 20 is_stmt 0 view .LVU75
 292 0016 0C22     		movs	r2, #12
 293 0018 4261     		str	r2, [r0, #20]
 212:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 294              		.loc 1 212 3 is_stmt 1 view .LVU76
 212:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 295              		.loc 1 212 25 is_stmt 0 view .LVU77
 296 001a 8361     		str	r3, [r0, #24]
 213:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 297              		.loc 1 213 3 is_stmt 1 view .LVU78
 213:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 298              		.loc 1 213 28 is_stmt 0 view .LVU79
 299 001c C361     		str	r3, [r0, #28]
 214:Core/Src/main.c ****   {
 300              		.loc 1 214 3 is_stmt 1 view .LVU80
 214:Core/Src/main.c ****   {
 301              		.loc 1 214 7 is_stmt 0 view .LVU81
 302 001e FFF7FEFF 		bl	HAL_UART_Init
 303              	.LVL8:
 214:Core/Src/main.c ****   {
 304              		.loc 1 214 6 view .LVU82
 305 0022 00B9     		cbnz	r0, .L20
 222:Core/Src/main.c **** 
 306              		.loc 1 222 1 view .LVU83
 307 0024 08BD     		pop	{r3, pc}
 308              	.L20:
 216:Core/Src/main.c ****   }
 309              		.loc 1 216 5 is_stmt 1 view .LVU84
 310 0026 FFF7FEFF 		bl	Error_Handler
 311              	.LVL9:
 312              	.L22:
 313 002a 00BF     		.align	2
 314              	.L21:
 315 002c 00000000 		.word	.LANCHOR1
 316 0030 00380140 		.word	1073821696
 317              		.cfi_endproc
 318              	.LFE68:
 320              		.section	.text.SystemClock_Config,"ax",%progbits
 321              		.align	1
 322              		.global	SystemClock_Config
 323              		.syntax unified
 324              		.thumb
 325              		.thumb_func
 327              	SystemClock_Config:
 328              	.LFB66:
 115:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 329              		.loc 1 115 1 view -0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 64
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333 0000 00B5     		push	{lr}
 334              	.LCFI8:
 335              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\james\AppData\Local\Temp\ccFwO6vV.s 			page 15


 336              		.cfi_offset 14, -4
 337 0002 91B0     		sub	sp, sp, #68
 338              	.LCFI9:
 339              		.cfi_def_cfa_offset 72
 116:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 340              		.loc 1 116 3 view .LVU86
 116:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 341              		.loc 1 116 22 is_stmt 0 view .LVU87
 342 0004 2822     		movs	r2, #40
 343 0006 0021     		movs	r1, #0
 344 0008 06A8     		add	r0, sp, #24
 345 000a FFF7FEFF 		bl	memset
 346              	.LVL10:
 117:Core/Src/main.c **** 
 347              		.loc 1 117 3 is_stmt 1 view .LVU88
 117:Core/Src/main.c **** 
 348              		.loc 1 117 22 is_stmt 0 view .LVU89
 349 000e 0023     		movs	r3, #0
 350 0010 0193     		str	r3, [sp, #4]
 351 0012 0293     		str	r3, [sp, #8]
 352 0014 0393     		str	r3, [sp, #12]
 353 0016 0493     		str	r3, [sp, #16]
 354 0018 0593     		str	r3, [sp, #20]
 122:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 355              		.loc 1 122 3 is_stmt 1 view .LVU90
 122:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 356              		.loc 1 122 36 is_stmt 0 view .LVU91
 357 001a 0223     		movs	r3, #2
 358 001c 0693     		str	r3, [sp, #24]
 123:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 359              		.loc 1 123 3 is_stmt 1 view .LVU92
 123:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 360              		.loc 1 123 30 is_stmt 0 view .LVU93
 361 001e 0123     		movs	r3, #1
 362 0020 0A93     		str	r3, [sp, #40]
 124:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 363              		.loc 1 124 3 is_stmt 1 view .LVU94
 124:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 364              		.loc 1 124 41 is_stmt 0 view .LVU95
 365 0022 1023     		movs	r3, #16
 366 0024 0B93     		str	r3, [sp, #44]
 125:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 367              		.loc 1 125 3 is_stmt 1 view .LVU96
 126:Core/Src/main.c ****   {
 368              		.loc 1 126 3 view .LVU97
 126:Core/Src/main.c ****   {
 369              		.loc 1 126 7 is_stmt 0 view .LVU98
 370 0026 06A8     		add	r0, sp, #24
 371 0028 FFF7FEFF 		bl	HAL_RCC_OscConfig
 372              	.LVL11:
 126:Core/Src/main.c ****   {
 373              		.loc 1 126 6 view .LVU99
 374 002c 68B9     		cbnz	r0, .L27
 133:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 375              		.loc 1 133 3 is_stmt 1 view .LVU100
 133:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 376              		.loc 1 133 31 is_stmt 0 view .LVU101
ARM GAS  C:\Users\james\AppData\Local\Temp\ccFwO6vV.s 			page 16


 377 002e 0F23     		movs	r3, #15
 378 0030 0193     		str	r3, [sp, #4]
 135:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 379              		.loc 1 135 3 is_stmt 1 view .LVU102
 135:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 380              		.loc 1 135 34 is_stmt 0 view .LVU103
 381 0032 0021     		movs	r1, #0
 382 0034 0291     		str	r1, [sp, #8]
 136:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 383              		.loc 1 136 3 is_stmt 1 view .LVU104
 136:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 384              		.loc 1 136 35 is_stmt 0 view .LVU105
 385 0036 0391     		str	r1, [sp, #12]
 137:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 386              		.loc 1 137 3 is_stmt 1 view .LVU106
 137:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 387              		.loc 1 137 36 is_stmt 0 view .LVU107
 388 0038 0491     		str	r1, [sp, #16]
 138:Core/Src/main.c **** 
 389              		.loc 1 138 3 is_stmt 1 view .LVU108
 138:Core/Src/main.c **** 
 390              		.loc 1 138 36 is_stmt 0 view .LVU109
 391 003a 0591     		str	r1, [sp, #20]
 140:Core/Src/main.c ****   {
 392              		.loc 1 140 3 is_stmt 1 view .LVU110
 140:Core/Src/main.c ****   {
 393              		.loc 1 140 7 is_stmt 0 view .LVU111
 394 003c 01A8     		add	r0, sp, #4
 395 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 396              	.LVL12:
 140:Core/Src/main.c ****   {
 397              		.loc 1 140 6 view .LVU112
 398 0042 20B9     		cbnz	r0, .L28
 144:Core/Src/main.c **** 
 399              		.loc 1 144 1 view .LVU113
 400 0044 11B0     		add	sp, sp, #68
 401              	.LCFI10:
 402              		.cfi_remember_state
 403              		.cfi_def_cfa_offset 4
 404              		@ sp needed
 405 0046 5DF804FB 		ldr	pc, [sp], #4
 406              	.L27:
 407              	.LCFI11:
 408              		.cfi_restore_state
 128:Core/Src/main.c ****   }
 409              		.loc 1 128 5 is_stmt 1 view .LVU114
 410 004a FFF7FEFF 		bl	Error_Handler
 411              	.LVL13:
 412              	.L28:
 142:Core/Src/main.c ****   }
 413              		.loc 1 142 5 view .LVU115
 414 004e FFF7FEFF 		bl	Error_Handler
 415              	.LVL14:
 416              		.cfi_endproc
 417              	.LFE66:
 419              		.section	.text.main,"ax",%progbits
 420              		.align	1
ARM GAS  C:\Users\james\AppData\Local\Temp\ccFwO6vV.s 			page 17


 421              		.global	main
 422              		.syntax unified
 423              		.thumb
 424              		.thumb_func
 426              	main:
 427              	.LFB65:
  70:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 428              		.loc 1 70 1 view -0
 429              		.cfi_startproc
 430              		@ Volatile: function does not return.
 431              		@ args = 0, pretend = 0, frame = 0
 432              		@ frame_needed = 0, uses_anonymous_args = 0
 433 0000 08B5     		push	{r3, lr}
 434              	.LCFI12:
 435              		.cfi_def_cfa_offset 8
 436              		.cfi_offset 3, -8
 437              		.cfi_offset 14, -4
  78:Core/Src/main.c **** 
 438              		.loc 1 78 3 view .LVU117
 439 0002 FFF7FEFF 		bl	HAL_Init
 440              	.LVL15:
  85:Core/Src/main.c **** 
 441              		.loc 1 85 3 view .LVU118
 442 0006 FFF7FEFF 		bl	SystemClock_Config
 443              	.LVL16:
  92:Core/Src/main.c ****   MX_TIM2_Init();
 444              		.loc 1 92 3 view .LVU119
 445 000a FFF7FEFF 		bl	MX_GPIO_Init
 446              	.LVL17:
  93:Core/Src/main.c ****   MX_USART1_UART_Init();
 447              		.loc 1 93 3 view .LVU120
 448 000e FFF7FEFF 		bl	MX_TIM2_Init
 449              	.LVL18:
  94:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 450              		.loc 1 94 3 view .LVU121
 451 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 452              	.LVL19:
 453              	.L30:
 101:Core/Src/main.c ****   {
 454              		.loc 1 101 3 discriminator 1 view .LVU122
 106:Core/Src/main.c ****   /* USER CODE END 3 */
 455              		.loc 1 106 3 discriminator 1 view .LVU123
 101:Core/Src/main.c ****   {
 456              		.loc 1 101 9 discriminator 1 view .LVU124
 457 0016 FEE7     		b	.L30
 458              		.cfi_endproc
 459              	.LFE65:
 461              		.global	huart1
 462              		.global	htim2
 463              		.section	.bss.htim2,"aw",%nobits
 464              		.align	2
 465              		.set	.LANCHOR0,. + 0
 468              	htim2:
 469 0000 00000000 		.space	72
 469      00000000 
 469      00000000 
 469      00000000 
ARM GAS  C:\Users\james\AppData\Local\Temp\ccFwO6vV.s 			page 18


 469      00000000 
 470              		.section	.bss.huart1,"aw",%nobits
 471              		.align	2
 472              		.set	.LANCHOR1,. + 0
 475              	huart1:
 476 0000 00000000 		.space	72
 476      00000000 
 476      00000000 
 476      00000000 
 476      00000000 
 477              		.text
 478              	.Letext0:
 479              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 480              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 481              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103x6.h"
 482              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 483              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 484              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 485              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 486              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 487              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 488              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 489              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 490              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 491              		.file 15 "<built-in>"
ARM GAS  C:\Users\james\AppData\Local\Temp\ccFwO6vV.s 			page 19


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\james\AppData\Local\Temp\ccFwO6vV.s:18     .text.MX_GPIO_Init:00000000 $t
C:\Users\james\AppData\Local\Temp\ccFwO6vV.s:23     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\james\AppData\Local\Temp\ccFwO6vV.s:98     .text.MX_GPIO_Init:00000048 $d
C:\Users\james\AppData\Local\Temp\ccFwO6vV.s:104    .text.Error_Handler:00000000 $t
C:\Users\james\AppData\Local\Temp\ccFwO6vV.s:110    .text.Error_Handler:00000000 Error_Handler
C:\Users\james\AppData\Local\Temp\ccFwO6vV.s:142    .text.MX_TIM2_Init:00000000 $t
C:\Users\james\AppData\Local\Temp\ccFwO6vV.s:147    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\james\AppData\Local\Temp\ccFwO6vV.s:250    .text.MX_TIM2_Init:00000060 $d
C:\Users\james\AppData\Local\Temp\ccFwO6vV.s:255    .text.MX_USART1_UART_Init:00000000 $t
C:\Users\james\AppData\Local\Temp\ccFwO6vV.s:260    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\james\AppData\Local\Temp\ccFwO6vV.s:315    .text.MX_USART1_UART_Init:0000002c $d
C:\Users\james\AppData\Local\Temp\ccFwO6vV.s:321    .text.SystemClock_Config:00000000 $t
C:\Users\james\AppData\Local\Temp\ccFwO6vV.s:327    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\james\AppData\Local\Temp\ccFwO6vV.s:420    .text.main:00000000 $t
C:\Users\james\AppData\Local\Temp\ccFwO6vV.s:426    .text.main:00000000 main
C:\Users\james\AppData\Local\Temp\ccFwO6vV.s:475    .bss.huart1:00000000 huart1
C:\Users\james\AppData\Local\Temp\ccFwO6vV.s:468    .bss.htim2:00000000 htim2
C:\Users\james\AppData\Local\Temp\ccFwO6vV.s:464    .bss.htim2:00000000 $d
C:\Users\james\AppData\Local\Temp\ccFwO6vV.s:471    .bss.huart1:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
