ARM GAS  C:\Users\james\AppData\Local\Temp\cc7Oukkl.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"scheduler.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SchUpdate,"ax",%progbits
  18              		.align	1
  19              		.global	SchUpdate
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	SchUpdate:
  25              	.LFB0:
  26              		.file 1 "Core/Src/scheduler.c"
   1:Core/Src/scheduler.c **** #include "scheduler.h"
   2:Core/Src/scheduler.c **** 
   3:Core/Src/scheduler.c **** task schTasks[SCH_MAX_TASKS];
   4:Core/Src/scheduler.c **** //task nextTask;
   5:Core/Src/scheduler.c **** 
   6:Core/Src/scheduler.c **** 
   7:Core/Src/scheduler.c **** void SchUpdate(void)
   8:Core/Src/scheduler.c **** {
  27              		.loc 1 8 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
   9:Core/Src/scheduler.c ****     for (uint8_t i = 0; i < SCH_MAX_TASKS; i++)
  32              		.loc 1 9 5 view .LVU1
  33              	.LBB2:
  34              		.loc 1 9 10 view .LVU2
  35              	.LVL0:
  36              		.loc 1 9 18 is_stmt 0 view .LVU3
  37 0000 0023     		movs	r3, #0
  38              		.loc 1 9 5 view .LVU4
  39 0002 08E0     		b	.L2
  40              	.LVL1:
  41              	.L4:
  10:Core/Src/scheduler.c ****     {
  11:Core/Src/scheduler.c ****         // Check is task need to be done or an blank slot in schTasks array
  12:Core/Src/scheduler.c ****         if(schTasks[i].pTask != 0x0000)
  13:Core/Src/scheduler.c ****         {
  14:Core/Src/scheduler.c ****             // Check is task need to be invoked
  15:Core/Src/scheduler.c ****             if(schTasks[i].Delay == 0)
  16:Core/Src/scheduler.c ****             {
  17:Core/Src/scheduler.c ****                 schTasks[i].RunMe = 1;
ARM GAS  C:\Users\james\AppData\Local\Temp\cc7Oukkl.s 			page 2


  18:Core/Src/scheduler.c ****             }
  19:Core/Src/scheduler.c ****             else 
  20:Core/Src/scheduler.c ****             {
  21:Core/Src/scheduler.c ****                 schTasks[i].Delay -= 1;
  42              		.loc 1 21 17 is_stmt 1 view .LVU5
  43              		.loc 1 21 35 is_stmt 0 view .LVU6
  44 0004 03EB8302 		add	r2, r3, r3, lsl #2
  45 0008 9000     		lsls	r0, r2, #2
  46 000a 0E4A     		ldr	r2, .L7
  47 000c 0244     		add	r2, r2, r0
  48 000e 0139     		subs	r1, r1, #1
  49 0010 5160     		str	r1, [r2, #4]
  50              	.L3:
   9:Core/Src/scheduler.c ****     for (uint8_t i = 0; i < SCH_MAX_TASKS; i++)
  51              		.loc 1 9 44 is_stmt 1 discriminator 2 view .LVU7
   9:Core/Src/scheduler.c ****     for (uint8_t i = 0; i < SCH_MAX_TASKS; i++)
  52              		.loc 1 9 45 is_stmt 0 discriminator 2 view .LVU8
  53 0012 0133     		adds	r3, r3, #1
  54              	.LVL2:
   9:Core/Src/scheduler.c ****     for (uint8_t i = 0; i < SCH_MAX_TASKS; i++)
  55              		.loc 1 9 45 discriminator 2 view .LVU9
  56 0014 DBB2     		uxtb	r3, r3
  57              	.LVL3:
  58              	.L2:
   9:Core/Src/scheduler.c ****     for (uint8_t i = 0; i < SCH_MAX_TASKS; i++)
  59              		.loc 1 9 25 is_stmt 1 discriminator 1 view .LVU10
   9:Core/Src/scheduler.c ****     for (uint8_t i = 0; i < SCH_MAX_TASKS; i++)
  60              		.loc 1 9 5 is_stmt 0 discriminator 1 view .LVU11
  61 0016 092B     		cmp	r3, #9
  62 0018 13D8     		bhi	.L6
  12:Core/Src/scheduler.c ****         {
  63              		.loc 1 12 9 is_stmt 1 view .LVU12
  12:Core/Src/scheduler.c ****         {
  64              		.loc 1 12 23 is_stmt 0 view .LVU13
  65 001a 03EB8300 		add	r0, r3, r3, lsl #2
  66 001e 8100     		lsls	r1, r0, #2
  67 0020 0848     		ldr	r0, .L7
  68 0022 4158     		ldr	r1, [r0, r1]
  12:Core/Src/scheduler.c ****         {
  69              		.loc 1 12 11 view .LVU14
  70 0024 0029     		cmp	r1, #0
  71 0026 F4D0     		beq	.L3
  15:Core/Src/scheduler.c ****             {
  72              		.loc 1 15 13 is_stmt 1 view .LVU15
  15:Core/Src/scheduler.c ****             {
  73              		.loc 1 15 27 is_stmt 0 view .LVU16
  74 0028 03EB8301 		add	r1, r3, r3, lsl #2
  75 002c 8800     		lsls	r0, r1, #2
  76 002e 0549     		ldr	r1, .L7
  77 0030 0144     		add	r1, r1, r0
  78 0032 4968     		ldr	r1, [r1, #4]
  15:Core/Src/scheduler.c ****             {
  79              		.loc 1 15 15 view .LVU17
  80 0034 0029     		cmp	r1, #0
  81 0036 E5D1     		bne	.L4
  17:Core/Src/scheduler.c ****             }
  82              		.loc 1 17 17 is_stmt 1 view .LVU18
ARM GAS  C:\Users\james\AppData\Local\Temp\cc7Oukkl.s 			page 3


  17:Core/Src/scheduler.c ****             }
  83              		.loc 1 17 35 is_stmt 0 view .LVU19
  84 0038 024A     		ldr	r2, .L7
  85 003a 0244     		add	r2, r2, r0
  86 003c 0121     		movs	r1, #1
  87 003e 1173     		strb	r1, [r2, #12]
  88 0040 E7E7     		b	.L3
  89              	.L6:
  90              	.LBE2:
  22:Core/Src/scheduler.c ****             }
  23:Core/Src/scheduler.c ****         }
  24:Core/Src/scheduler.c ****     }
  25:Core/Src/scheduler.c **** }
  91              		.loc 1 25 1 view .LVU20
  92 0042 7047     		bx	lr
  93              	.L8:
  94              		.align	2
  95              	.L7:
  96 0044 00000000 		.word	.LANCHOR0
  97              		.cfi_endproc
  98              	.LFE0:
 100              		.section	.text.SchAddTask,"ax",%progbits
 101              		.align	1
 102              		.global	SchAddTask
 103              		.syntax unified
 104              		.thumb
 105              		.thumb_func
 107              	SchAddTask:
 108              	.LVL4:
 109              	.LFB2:
  26:Core/Src/scheduler.c **** 
  27:Core/Src/scheduler.c **** void SchDispatchTasks(void)
  28:Core/Src/scheduler.c **** {
  29:Core/Src/scheduler.c ****     for (uint8_t i = 0; i < SCH_MAX_TASKS; i++)
  30:Core/Src/scheduler.c ****     {
  31:Core/Src/scheduler.c ****         // Check does it need to invoke task
  32:Core/Src/scheduler.c ****         if(schTasks[i].RunMe)
  33:Core/Src/scheduler.c ****         {
  34:Core/Src/scheduler.c ****             schTasks[i].RunMe = 0;
  35:Core/Src/scheduler.c ****             // Invoke task
  36:Core/Src/scheduler.c ****             (*schTasks[i].pTask)();
  37:Core/Src/scheduler.c **** 
  38:Core/Src/scheduler.c ****             // Copy all attribute of task into a temporary pointer
  39:Core/Src/scheduler.c ****             task *temp = (task *)malloc(sizeof(task));
  40:Core/Src/scheduler.c ****             memcpy(temp, &schTasks[i], sizeof(task));
  41:Core/Src/scheduler.c **** 
  42:Core/Src/scheduler.c ****             if(schTasks[i].Period == 0)
  43:Core/Src/scheduler.c ****             {
  44:Core/Src/scheduler.c ****                 // Delete if period == 0, that means this task just invoke one time
  45:Core/Src/scheduler.c ****                 SchDeleteTask(schTasks[i].TaskId);
  46:Core/Src/scheduler.c ****             }
  47:Core/Src/scheduler.c ****             else
  48:Core/Src/scheduler.c ****             {
  49:Core/Src/scheduler.c ****                 // Extend delay time of task
  50:Core/Src/scheduler.c ****                 schTasks[i].Delay = temp->Period;
  51:Core/Src/scheduler.c ****             }
  52:Core/Src/scheduler.c **** 
ARM GAS  C:\Users\james\AppData\Local\Temp\cc7Oukkl.s 			page 4


  53:Core/Src/scheduler.c ****             free(temp);
  54:Core/Src/scheduler.c ****         }
  55:Core/Src/scheduler.c ****     }
  56:Core/Src/scheduler.c **** }
  57:Core/Src/scheduler.c **** 
  58:Core/Src/scheduler.c **** uint32_t SchAddTask(void (*func)(), uint16_t delay, uint16_t period)
  59:Core/Src/scheduler.c **** {
 110              		.loc 1 59 1 is_stmt 1 view -0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 0, uses_anonymous_args = 0
  60:Core/Src/scheduler.c ****     // Check blank slot in queue
  61:Core/Src/scheduler.c ****     for (uint8_t i = 0; i < SCH_MAX_TASKS; i++)
 114              		.loc 1 61 5 view .LVU22
 115              	.LBB3:
 116              		.loc 1 61 10 view .LVU23
 117              		.loc 1 61 18 is_stmt 0 view .LVU24
 118 0000 0023     		movs	r3, #0
 119              	.LVL5:
 120              		.loc 1 61 25 is_stmt 1 view .LVU25
 121              		.loc 1 61 5 is_stmt 0 view .LVU26
 122 0002 092B     		cmp	r3, #9
 123 0004 19D8     		bhi	.L19
 124              	.LBE3:
  59:Core/Src/scheduler.c ****     // Check blank slot in queue
 125              		.loc 1 59 1 view .LVU27
 126 0006 10B5     		push	{r4, lr}
 127              	.LCFI0:
 128              		.cfi_def_cfa_offset 8
 129              		.cfi_offset 4, -8
 130              		.cfi_offset 14, -4
 131              	.L13:
 132              	.LBB4:
  62:Core/Src/scheduler.c ****     {
  63:Core/Src/scheduler.c ****         if(schTasks[i].pTask == 0x0000)
 133              		.loc 1 63 9 is_stmt 1 view .LVU28
 134              		.loc 1 63 23 is_stmt 0 view .LVU29
 135 0008 9E46     		mov	lr, r3
 136 000a 03EB830C 		add	ip, r3, r3, lsl #2
 137 000e 0C4C     		ldr	r4, .L21
 138 0010 54F82C40 		ldr	r4, [r4, ip, lsl #2]
 139              		.loc 1 63 11 view .LVU30
 140 0014 2CB1     		cbz	r4, .L20
  61:Core/Src/scheduler.c ****     {
 141              		.loc 1 61 44 is_stmt 1 discriminator 2 view .LVU31
  61:Core/Src/scheduler.c ****     {
 142              		.loc 1 61 45 is_stmt 0 discriminator 2 view .LVU32
 143 0016 0133     		adds	r3, r3, #1
 144              	.LVL6:
  61:Core/Src/scheduler.c ****     {
 145              		.loc 1 61 45 discriminator 2 view .LVU33
 146 0018 DBB2     		uxtb	r3, r3
 147              	.LVL7:
  61:Core/Src/scheduler.c ****     {
 148              		.loc 1 61 25 is_stmt 1 discriminator 2 view .LVU34
  61:Core/Src/scheduler.c ****     {
 149              		.loc 1 61 5 is_stmt 0 discriminator 2 view .LVU35
ARM GAS  C:\Users\james\AppData\Local\Temp\cc7Oukkl.s 			page 5


 150 001a 092B     		cmp	r3, #9
 151 001c F4D9     		bls	.L13
 152              	.LBE4:
  64:Core/Src/scheduler.c ****         {
  65:Core/Src/scheduler.c ****             schTasks[i].pTask = func;
  66:Core/Src/scheduler.c ****             schTasks[i].Delay = delay;
  67:Core/Src/scheduler.c ****             schTasks[i].Period = period;
  68:Core/Src/scheduler.c ****             schTasks[i].TaskId = i + 1;
  69:Core/Src/scheduler.c **** 
  70:Core/Src/scheduler.c ****             return schTasks[i].TaskId;
  71:Core/Src/scheduler.c ****         }
  72:Core/Src/scheduler.c ****     }
  73:Core/Src/scheduler.c ****     return 0;
 153              		.loc 1 73 12 view .LVU36
 154 001e 0020     		movs	r0, #0
 155              	.LVL8:
 156              	.L9:
  74:Core/Src/scheduler.c **** }
 157              		.loc 1 74 1 view .LVU37
 158 0020 10BD     		pop	{r4, pc}
 159              	.LVL9:
 160              	.L20:
 161              	.LBB5:
  65:Core/Src/scheduler.c ****             schTasks[i].Delay = delay;
 162              		.loc 1 65 13 is_stmt 1 view .LVU38
  65:Core/Src/scheduler.c ****             schTasks[i].Delay = delay;
 163              		.loc 1 65 31 is_stmt 0 view .LVU39
 164 0022 074B     		ldr	r3, .L21
 165              	.LVL10:
  65:Core/Src/scheduler.c ****             schTasks[i].Delay = delay;
 166              		.loc 1 65 31 view .LVU40
 167 0024 03EB8C04 		add	r4, r3, ip, lsl #2
 168 0028 43F82C00 		str	r0, [r3, ip, lsl #2]
  66:Core/Src/scheduler.c ****             schTasks[i].Period = period;
 169              		.loc 1 66 13 is_stmt 1 view .LVU41
  66:Core/Src/scheduler.c ****             schTasks[i].Period = period;
 170              		.loc 1 66 31 is_stmt 0 view .LVU42
 171 002c 6160     		str	r1, [r4, #4]
  67:Core/Src/scheduler.c ****             schTasks[i].TaskId = i + 1;
 172              		.loc 1 67 13 is_stmt 1 view .LVU43
  67:Core/Src/scheduler.c ****             schTasks[i].TaskId = i + 1;
 173              		.loc 1 67 32 is_stmt 0 view .LVU44
 174 002e A260     		str	r2, [r4, #8]
  68:Core/Src/scheduler.c **** 
 175              		.loc 1 68 13 is_stmt 1 view .LVU45
  68:Core/Src/scheduler.c **** 
 176              		.loc 1 68 36 is_stmt 0 view .LVU46
 177 0030 0EF10100 		add	r0, lr, #1
 178              	.LVL11:
  68:Core/Src/scheduler.c **** 
 179              		.loc 1 68 32 view .LVU47
 180 0034 A646     		mov	lr, r4
 181 0036 2061     		str	r0, [r4, #16]
  70:Core/Src/scheduler.c ****         }
 182              		.loc 1 70 13 is_stmt 1 view .LVU48
  70:Core/Src/scheduler.c ****         }
 183              		.loc 1 70 31 is_stmt 0 view .LVU49
ARM GAS  C:\Users\james\AppData\Local\Temp\cc7Oukkl.s 			page 6


 184 0038 F2E7     		b	.L9
 185              	.LVL12:
 186              	.L19:
 187              	.LCFI1:
 188              		.cfi_def_cfa_offset 0
 189              		.cfi_restore 4
 190              		.cfi_restore 14
  70:Core/Src/scheduler.c ****         }
 191              		.loc 1 70 31 view .LVU50
 192              	.LBE5:
  73:Core/Src/scheduler.c **** }
 193              		.loc 1 73 12 view .LVU51
 194 003a 0020     		movs	r0, #0
 195              	.LVL13:
 196              		.loc 1 74 1 view .LVU52
 197 003c 7047     		bx	lr
 198              	.L22:
 199 003e 00BF     		.align	2
 200              	.L21:
 201 0040 00000000 		.word	.LANCHOR0
 202              		.cfi_endproc
 203              	.LFE2:
 205              		.section	.text.SchDeleteTask,"ax",%progbits
 206              		.align	1
 207              		.global	SchDeleteTask
 208              		.syntax unified
 209              		.thumb
 210              		.thumb_func
 212              	SchDeleteTask:
 213              	.LVL14:
 214              	.LFB3:
  75:Core/Src/scheduler.c **** 
  76:Core/Src/scheduler.c **** uint8_t SchDeleteTask(uint32_t id)
  77:Core/Src/scheduler.c **** {
 215              		.loc 1 77 1 is_stmt 1 view -0
 216              		.cfi_startproc
 217              		@ args = 0, pretend = 0, frame = 0
 218              		@ frame_needed = 0, uses_anonymous_args = 0
  78:Core/Src/scheduler.c ****     if(id > SCH_MAX_TASKS)
 219              		.loc 1 78 5 view .LVU54
 220              		.loc 1 78 7 is_stmt 0 view .LVU55
 221 0000 0A28     		cmp	r0, #10
 222 0002 30D8     		bhi	.L30
 223              	.LBB6:
  79:Core/Src/scheduler.c ****         return 0;
  80:Core/Src/scheduler.c **** 
  81:Core/Src/scheduler.c ****     for (uint8_t i = 0; i < SCH_MAX_TASKS; i++)
 224              		.loc 1 81 18 view .LVU56
 225 0004 0023     		movs	r3, #0
 226 0006 20E0     		b	.L25
 227              	.LVL15:
 228              	.L28:
 229              	.LCFI2:
 230              		.cfi_def_cfa_offset 8
 231              		.cfi_offset 4, -8
 232              		.cfi_offset 14, -4
 233              	.LBB7:
ARM GAS  C:\Users\james\AppData\Local\Temp\cc7Oukkl.s 			page 7


  82:Core/Src/scheduler.c ****     {
  83:Core/Src/scheduler.c ****         if(schTasks[i].TaskId == id)
  84:Core/Src/scheduler.c ****         {
  85:Core/Src/scheduler.c ****             for (uint8_t j = i; j < SCH_MAX_TASKS - 1; j++)
  86:Core/Src/scheduler.c ****             {
  87:Core/Src/scheduler.c ****                 schTasks[j] = schTasks[j+1];
 234              		.loc 1 87 17 is_stmt 1 discriminator 3 view .LVU57
 235              		.loc 1 87 41 is_stmt 0 discriminator 3 view .LVU58
 236 0008 5C1C     		adds	r4, r3, #1
 237              		.loc 1 87 29 discriminator 3 view .LVU59
 238 000a 184A     		ldr	r2, .L37
 239 000c 03EB8303 		add	r3, r3, r3, lsl #2
 240              	.LVL16:
 241              		.loc 1 87 29 discriminator 3 view .LVU60
 242 0010 04EB840E 		add	lr, r4, r4, lsl #2
 243 0014 02EB830C 		add	ip, r2, r3, lsl #2
 244 0018 02EB8E0E 		add	lr, r2, lr, lsl #2
 245 001c BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 246 0020 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 247 0024 DEF80030 		ldr	r3, [lr]
 248 0028 CCF80030 		str	r3, [ip]
  85:Core/Src/scheduler.c ****             {
 249              		.loc 1 85 56 is_stmt 1 discriminator 3 view .LVU61
  85:Core/Src/scheduler.c ****             {
 250              		.loc 1 85 57 is_stmt 0 discriminator 3 view .LVU62
 251 002c E3B2     		uxtb	r3, r4
 252              	.LVL17:
 253              	.L26:
  85:Core/Src/scheduler.c ****             {
 254              		.loc 1 85 33 is_stmt 1 discriminator 1 view .LVU63
  85:Core/Src/scheduler.c ****             {
 255              		.loc 1 85 13 is_stmt 0 discriminator 1 view .LVU64
 256 002e 082B     		cmp	r3, #8
 257 0030 EAD9     		bls	.L28
 258              	.LBE7:
  88:Core/Src/scheduler.c ****             }
  89:Core/Src/scheduler.c ****             schTasks[SCH_MAX_TASKS-1].pTask = 0x0000;
 259              		.loc 1 89 13 is_stmt 1 view .LVU65
 260              		.loc 1 89 45 is_stmt 0 view .LVU66
 261 0032 0E4B     		ldr	r3, .L37
 262              	.LVL18:
 263              		.loc 1 89 45 view .LVU67
 264 0034 0022     		movs	r2, #0
 265 0036 C3F8B420 		str	r2, [r3, #180]
  90:Core/Src/scheduler.c ****             schTasks[SCH_MAX_TASKS-1].RunMe = 0;
 266              		.loc 1 90 13 is_stmt 1 view .LVU68
 267              		.loc 1 90 45 is_stmt 0 view .LVU69
 268 003a 83F8C020 		strb	r2, [r3, #192]
  91:Core/Src/scheduler.c ****             schTasks[SCH_MAX_TASKS-1].TaskId = 0;
 269              		.loc 1 91 13 is_stmt 1 view .LVU70
 270              		.loc 1 91 46 is_stmt 0 view .LVU71
 271 003e C3F8C420 		str	r2, [r3, #196]
  92:Core/Src/scheduler.c **** 
  93:Core/Src/scheduler.c ****             return 1;
 272              		.loc 1 93 13 is_stmt 1 view .LVU72
 273              		.loc 1 93 20 is_stmt 0 view .LVU73
 274 0042 0120     		movs	r0, #1
ARM GAS  C:\Users\james\AppData\Local\Temp\cc7Oukkl.s 			page 8


 275              	.LBE6:
  94:Core/Src/scheduler.c ****         }
  95:Core/Src/scheduler.c ****     }
  96:Core/Src/scheduler.c ****     return 0;
  97:Core/Src/scheduler.c **** }...
 276              		.loc 1 97 1 view .LVU74
 277 0044 10BD     		pop	{r4, pc}
 278              	.LVL19:
 279              	.L31:
 280              	.LCFI3:
 281              		.cfi_def_cfa_offset 0
 282              		.cfi_restore 4
 283              		.cfi_restore 14
 284              	.LBB8:
  81:Core/Src/scheduler.c ****     for (uint8_t i = 0; i < SCH_MAX_TASKS; i++)
 285              		.loc 1 81 44 is_stmt 1 discriminator 2 view .LVU75
  81:Core/Src/scheduler.c ****     for (uint8_t i = 0; i < SCH_MAX_TASKS; i++)
 286              		.loc 1 81 45 is_stmt 0 discriminator 2 view .LVU76
 287 0046 0133     		adds	r3, r3, #1
 288              	.LVL20:
  81:Core/Src/scheduler.c ****     for (uint8_t i = 0; i < SCH_MAX_TASKS; i++)
 289              		.loc 1 81 45 discriminator 2 view .LVU77
 290 0048 DBB2     		uxtb	r3, r3
 291              	.LVL21:
 292              	.L25:
  81:Core/Src/scheduler.c ****     for (uint8_t i = 0; i < SCH_MAX_TASKS; i++)
 293              		.loc 1 81 25 is_stmt 1 discriminator 1 view .LVU78
  81:Core/Src/scheduler.c ****     for (uint8_t i = 0; i < SCH_MAX_TASKS; i++)
 294              		.loc 1 81 5 is_stmt 0 discriminator 1 view .LVU79
 295 004a 092B     		cmp	r3, #9
 296 004c 09D8     		bhi	.L36
  83:Core/Src/scheduler.c ****         if(schTasks[i].TaskId == id)
 297              		.loc 1 83 9 is_stmt 1 view .LVU80
  83:Core/Src/scheduler.c ****         if(schTasks[i].TaskId == id)
 298              		.loc 1 83 23 is_stmt 0 view .LVU81
 299 004e 03EB8302 		add	r2, r3, r3, lsl #2
 300 0052 0649     		ldr	r1, .L37
 301 0054 01EB8202 		add	r2, r1, r2, lsl #2
 302 0058 1269     		ldr	r2, [r2, #16]
  83:Core/Src/scheduler.c ****         if(schTasks[i].TaskId == id)
 303              		.loc 1 83 11 view .LVU82
 304 005a 8242     		cmp	r2, r0
 305 005c F3D1     		bne	.L31
 306              	.LBE8:
  77:Core/Src/scheduler.c **** {
 307              		.loc 1 77 1 view .LVU83
 308 005e 10B5     		push	{r4, lr}
 309              	.LCFI4:
 310              		.cfi_def_cfa_offset 8
 311              		.cfi_offset 4, -8
 312              		.cfi_offset 14, -4
 313              	.LBB9:
 314 0060 E5E7     		b	.L26
 315              	.L36:
 316              	.LCFI5:
 317              		.cfi_def_cfa_offset 0
 318              		.cfi_restore 4
ARM GAS  C:\Users\james\AppData\Local\Temp\cc7Oukkl.s 			page 9


 319              		.cfi_restore 14
  77:Core/Src/scheduler.c **** {
 320              		.loc 1 77 1 view .LVU84
 321              	.LBE9:
  96:Core/Src/scheduler.c ****     return 0;
 322              		.loc 1 96 12 view .LVU85
 323 0062 0020     		movs	r0, #0
 324              	.LVL22:
 325              	.LBB10:
  96:Core/Src/scheduler.c ****     return 0;
 326              		.loc 1 96 12 view .LVU86
 327 0064 7047     		bx	lr
 328              	.LVL23:
 329              	.L30:
  96:Core/Src/scheduler.c ****     return 0;
 330              		.loc 1 96 12 view .LVU87
 331              	.LBE10:
  79:Core/Src/scheduler.c ****         return 0;
 332              		.loc 1 79 16 view .LVU88
 333 0066 0020     		movs	r0, #0
 334              	.LVL24:
 335              		.loc 1 97 1 view .LVU89
 336 0068 7047     		bx	lr
 337              	.L38:
 338 006a 00BF     		.align	2
 339              	.L37:
 340 006c 00000000 		.word	.LANCHOR0
 341              		.cfi_endproc
 342              	.LFE3:
 344              		.section	.text.SchDispatchTasks,"ax",%progbits
 345              		.align	1
 346              		.global	SchDispatchTasks
 347              		.syntax unified
 348              		.thumb
 349              		.thumb_func
 351              	SchDispatchTasks:
 352              	.LFB1:
  28:Core/Src/scheduler.c **** {
 353              		.loc 1 28 1 is_stmt 1 view -0
 354              		.cfi_startproc
 355              		@ args = 0, pretend = 0, frame = 0
 356              		@ frame_needed = 0, uses_anonymous_args = 0
 357 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 358              	.LCFI6:
 359              		.cfi_def_cfa_offset 32
 360              		.cfi_offset 3, -32
 361              		.cfi_offset 4, -28
 362              		.cfi_offset 5, -24
 363              		.cfi_offset 6, -20
 364              		.cfi_offset 7, -16
 365              		.cfi_offset 8, -12
 366              		.cfi_offset 9, -8
 367              		.cfi_offset 14, -4
  29:Core/Src/scheduler.c ****     for (uint8_t i = 0; i < SCH_MAX_TASKS; i++)
 368              		.loc 1 29 5 view .LVU91
 369              	.LBB11:
  29:Core/Src/scheduler.c ****     for (uint8_t i = 0; i < SCH_MAX_TASKS; i++)
ARM GAS  C:\Users\james\AppData\Local\Temp\cc7Oukkl.s 			page 10


 370              		.loc 1 29 10 view .LVU92
 371              	.LVL25:
  29:Core/Src/scheduler.c ****     for (uint8_t i = 0; i < SCH_MAX_TASKS; i++)
 372              		.loc 1 29 18 is_stmt 0 view .LVU93
 373 0004 0024     		movs	r4, #0
  29:Core/Src/scheduler.c ****     for (uint8_t i = 0; i < SCH_MAX_TASKS; i++)
 374              		.loc 1 29 5 view .LVU94
 375 0006 07E0     		b	.L40
 376              	.LVL26:
 377              	.L47:
 378              	.LBB12:
  45:Core/Src/scheduler.c ****                 SchDeleteTask(schTasks[i].TaskId);
 379              		.loc 1 45 17 is_stmt 1 view .LVU95
 380 0008 2869     		ldr	r0, [r5, #16]
 381 000a FFF7FEFF 		bl	SchDeleteTask
 382              	.LVL27:
 383              	.L43:
  53:Core/Src/scheduler.c ****             free(temp);
 384              		.loc 1 53 13 view .LVU96
 385 000e 4846     		mov	r0, r9
 386 0010 FFF7FEFF 		bl	free
 387              	.LVL28:
 388              	.L41:
  53:Core/Src/scheduler.c ****             free(temp);
 389              		.loc 1 53 13 is_stmt 0 view .LVU97
 390              	.LBE12:
  29:Core/Src/scheduler.c ****     for (uint8_t i = 0; i < SCH_MAX_TASKS; i++)
 391              		.loc 1 29 44 is_stmt 1 discriminator 2 view .LVU98
  29:Core/Src/scheduler.c ****     for (uint8_t i = 0; i < SCH_MAX_TASKS; i++)
 392              		.loc 1 29 45 is_stmt 0 discriminator 2 view .LVU99
 393 0014 0134     		adds	r4, r4, #1
 394              	.LVL29:
  29:Core/Src/scheduler.c ****     for (uint8_t i = 0; i < SCH_MAX_TASKS; i++)
 395              		.loc 1 29 45 discriminator 2 view .LVU100
 396 0016 E4B2     		uxtb	r4, r4
 397              	.LVL30:
 398              	.L40:
  29:Core/Src/scheduler.c ****     for (uint8_t i = 0; i < SCH_MAX_TASKS; i++)
 399              		.loc 1 29 25 is_stmt 1 discriminator 1 view .LVU101
  29:Core/Src/scheduler.c ****     for (uint8_t i = 0; i < SCH_MAX_TASKS; i++)
 400              		.loc 1 29 5 is_stmt 0 discriminator 1 view .LVU102
 401 0018 092C     		cmp	r4, #9
 402 001a 33D8     		bhi	.L46
  32:Core/Src/scheduler.c ****         if(schTasks[i].RunMe)
 403              		.loc 1 32 9 is_stmt 1 view .LVU103
  32:Core/Src/scheduler.c ****         if(schTasks[i].RunMe)
 404              		.loc 1 32 23 is_stmt 0 view .LVU104
 405 001c 04EB8403 		add	r3, r4, r4, lsl #2
 406 0020 194A     		ldr	r2, .L48
 407 0022 02EB8303 		add	r3, r2, r3, lsl #2
 408 0026 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
  32:Core/Src/scheduler.c ****         if(schTasks[i].RunMe)
 409              		.loc 1 32 11 view .LVU105
 410 0028 002B     		cmp	r3, #0
 411 002a F3D0     		beq	.L41
 412              	.LBB13:
  34:Core/Src/scheduler.c ****             schTasks[i].RunMe = 0;
ARM GAS  C:\Users\james\AppData\Local\Temp\cc7Oukkl.s 			page 11


 413              		.loc 1 34 13 is_stmt 1 view .LVU106
  34:Core/Src/scheduler.c ****             schTasks[i].RunMe = 0;
 414              		.loc 1 34 31 is_stmt 0 view .LVU107
 415 002c 1746     		mov	r7, r2
 416 002e 04EB8405 		add	r5, r4, r4, lsl #2
 417 0032 4FEA8508 		lsl	r8, r5, #2
 418 0036 02EB8505 		add	r5, r2, r5, lsl #2
 419 003a 0023     		movs	r3, #0
 420 003c 2B73     		strb	r3, [r5, #12]
  36:Core/Src/scheduler.c ****             (*schTasks[i].pTask)();
 421              		.loc 1 36 13 is_stmt 1 view .LVU108
  36:Core/Src/scheduler.c ****             (*schTasks[i].pTask)();
 422              		.loc 1 36 14 is_stmt 0 view .LVU109
 423 003e 52F80830 		ldr	r3, [r2, r8]
 424 0042 9847     		blx	r3
 425              	.LVL31:
  39:Core/Src/scheduler.c ****             task *temp = (task *)malloc(sizeof(task));
 426              		.loc 1 39 13 is_stmt 1 view .LVU110
  39:Core/Src/scheduler.c ****             task *temp = (task *)malloc(sizeof(task));
 427              		.loc 1 39 34 is_stmt 0 view .LVU111
 428 0044 1420     		movs	r0, #20
 429 0046 FFF7FEFF 		bl	malloc
 430              	.LVL32:
 431 004a 8146     		mov	r9, r0
 432              	.LVL33:
  40:Core/Src/scheduler.c ****             memcpy(temp, &schTasks[i], sizeof(task));
 433              		.loc 1 40 13 is_stmt 1 view .LVU112
 434 004c 57F80830 		ldr	r3, [r7, r8]	@ unaligned
 435 0050 6868     		ldr	r0, [r5, #4]	@ unaligned
 436              	.LVL34:
  40:Core/Src/scheduler.c ****             memcpy(temp, &schTasks[i], sizeof(task));
 437              		.loc 1 40 13 is_stmt 0 view .LVU113
 438 0052 A968     		ldr	r1, [r5, #8]	@ unaligned
 439 0054 EA68     		ldr	r2, [r5, #12]	@ unaligned
 440 0056 C9F80030 		str	r3, [r9]	@ unaligned
 441 005a C9F80400 		str	r0, [r9, #4]	@ unaligned
 442 005e C9F80810 		str	r1, [r9, #8]	@ unaligned
 443 0062 C9F80C20 		str	r2, [r9, #12]	@ unaligned
 444 0066 2B69     		ldr	r3, [r5, #16]	@ unaligned
 445 0068 C9F81030 		str	r3, [r9, #16]	@ unaligned
  42:Core/Src/scheduler.c ****             if(schTasks[i].Period == 0)
 446              		.loc 1 42 13 is_stmt 1 view .LVU114
  42:Core/Src/scheduler.c ****             if(schTasks[i].Period == 0)
 447              		.loc 1 42 27 is_stmt 0 view .LVU115
 448 006c AB68     		ldr	r3, [r5, #8]
  42:Core/Src/scheduler.c ****             if(schTasks[i].Period == 0)
 449              		.loc 1 42 15 view .LVU116
 450 006e 002B     		cmp	r3, #0
 451 0070 CAD0     		beq	.L47
  50:Core/Src/scheduler.c ****                 schTasks[i].Delay = temp->Period;
 452              		.loc 1 50 17 is_stmt 1 view .LVU117
  50:Core/Src/scheduler.c ****                 schTasks[i].Delay = temp->Period;
 453              		.loc 1 50 41 is_stmt 0 view .LVU118
 454 0072 D9F80820 		ldr	r2, [r9, #8]
  50:Core/Src/scheduler.c ****                 schTasks[i].Delay = temp->Period;
 455              		.loc 1 50 35 view .LVU119
 456 0076 04EB8406 		add	r6, r4, r4, lsl #2
ARM GAS  C:\Users\james\AppData\Local\Temp\cc7Oukkl.s 			page 12


 457 007a 034B     		ldr	r3, .L48
 458 007c 03EB8606 		add	r6, r3, r6, lsl #2
 459 0080 7260     		str	r2, [r6, #4]
 460 0082 C4E7     		b	.L43
 461              	.LVL35:
 462              	.L46:
  50:Core/Src/scheduler.c ****                 schTasks[i].Delay = temp->Period;
 463              		.loc 1 50 35 view .LVU120
 464              	.LBE13:
 465              	.LBE11:
  56:Core/Src/scheduler.c **** }
 466              		.loc 1 56 1 view .LVU121
 467 0084 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 468              	.LVL36:
 469              	.L49:
  56:Core/Src/scheduler.c **** }
 470              		.loc 1 56 1 view .LVU122
 471              		.align	2
 472              	.L48:
 473 0088 00000000 		.word	.LANCHOR0
 474              		.cfi_endproc
 475              	.LFE1:
 477              		.global	schTasks
 478              		.section	.bss.schTasks,"aw",%nobits
 479              		.align	2
 480              		.set	.LANCHOR0,. + 0
 483              	schTasks:
 484 0000 00000000 		.space	200
 484      00000000 
 484      00000000 
 484      00000000 
 484      00000000 
 485              		.text
 486              	.Letext0:
 487              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 488              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 489              		.file 4 "Core/Inc/scheduler.h"
 490              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
ARM GAS  C:\Users\james\AppData\Local\Temp\cc7Oukkl.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 scheduler.c
C:\Users\james\AppData\Local\Temp\cc7Oukkl.s:18     .text.SchUpdate:00000000 $t
C:\Users\james\AppData\Local\Temp\cc7Oukkl.s:24     .text.SchUpdate:00000000 SchUpdate
C:\Users\james\AppData\Local\Temp\cc7Oukkl.s:96     .text.SchUpdate:00000044 $d
C:\Users\james\AppData\Local\Temp\cc7Oukkl.s:101    .text.SchAddTask:00000000 $t
C:\Users\james\AppData\Local\Temp\cc7Oukkl.s:107    .text.SchAddTask:00000000 SchAddTask
C:\Users\james\AppData\Local\Temp\cc7Oukkl.s:201    .text.SchAddTask:00000040 $d
C:\Users\james\AppData\Local\Temp\cc7Oukkl.s:206    .text.SchDeleteTask:00000000 $t
C:\Users\james\AppData\Local\Temp\cc7Oukkl.s:212    .text.SchDeleteTask:00000000 SchDeleteTask
C:\Users\james\AppData\Local\Temp\cc7Oukkl.s:340    .text.SchDeleteTask:0000006c $d
C:\Users\james\AppData\Local\Temp\cc7Oukkl.s:345    .text.SchDispatchTasks:00000000 $t
C:\Users\james\AppData\Local\Temp\cc7Oukkl.s:351    .text.SchDispatchTasks:00000000 SchDispatchTasks
C:\Users\james\AppData\Local\Temp\cc7Oukkl.s:473    .text.SchDispatchTasks:00000088 $d
C:\Users\james\AppData\Local\Temp\cc7Oukkl.s:483    .bss.schTasks:00000000 schTasks
C:\Users\james\AppData\Local\Temp\cc7Oukkl.s:479    .bss.schTasks:00000000 $d

UNDEFINED SYMBOLS
free
malloc
